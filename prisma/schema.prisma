// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  id_dep String 
  id_group String 
  firstname  String
  lastname String 
  phone Int
  email String @unique
  username String @unique
  password String
  office_num Int 
  function String
  role  String  
  isActive Boolean @default(true)
  departement Departement @relation(fields: [id_dep],references: [id])
  group Groupe @relation(fields: [id_group], references: [id])
  equipement Equipement[]
  demandeIntervention DemandeIntervention[]
}

model Groupe {
  id String @id @default(uuid())
  libelle String
  users User[]
}

model Direction {
  id String @id @default(uuid())
  direction_name String
  departements Departement[]
}

model Departement {
  id String @id @default(uuid())
  dir_id String
  dep_name  String
  users User[]
  direction Direction @relation(fields:[dir_id], references: [id]) 
}

model Equipement {
  id String @id @default(uuid())
  id_user String 
  id_equipement String
  numero_de_serie String
  libelle String
  caracteristique String?
  date_aquisition DateTime @default(now())
  date_fin_garantie DateTime
  date_sortie DateTime
  image String @db.Text
  typeEquipement TypeEquipement @relation(fields: [id_equipement], references: [id])
  user User @relation(fields: [id_user],references: [id])
  demandeIntervention DemandeIntervention[]
}

model TypeEquipement {
  id String @id @default(uuid())
  libelle String
  equipement Equipement[]
}

enum InterventionStatus {
  EN_ATTENTE
  EN_COURS
  REJETER
  TERMINER
}

model DemandeIntervention {
  id String @id @default(uuid())
  id_user String
  motif_demande String
  status InterventionStatus @default(EN_ATTENTE)
  date_demande DateTime @default(now())
  personne User @relation(fields: [id_user], references: [id])
  equipement Equipement[]
}